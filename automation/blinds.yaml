
  - alias: 'People Awake'
    id: people_awake
    trigger:
      platform: state
      entity_id: binary_sensor.people_awake
      to: 'on'
      for: 
        minutes: 5
    condition:
      condition: time
      after: '07:00:00'
      before: '11:00:00'
    action:
        service: cover.open_cover
        data:
          entity_id: cover.blind

  - alias: 'Close the blind when its sunny'
    id: blind_sunny
    trigger:
      - platform: template
        value_template: '{{ states.sensor.new_blind_position.state | int != states.sensor.blind_position.state | int }}'
    condition: 
      condition: and
      conditions:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      - condition: time
        after: '11:00:00'
    action:
        - service: cover.set_cover_position
          data_template:
            entity_id: cover.blind
            position: '{{ states.sensor.new_blind_position.state | int }}'
  
  - alias: 'Blind close at sunset'
    id: blind_sunset
    trigger:
      - platform: sun
        event: sunset
        offset: '00:05:00'
    action:
        - service: cover.close_cover
          data:
            entity_id: cover.blind

  - alias: 'Set Clear Day'
    id: set_clear
    trigger:
      platform: numeric_state
      entity_id: sensor.clear_day
      above: 0
    condition: 
      condition: state
      entity_id: sun.sun
      state: above_horizon
    action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.clear_day

  - alias: 'Reset Clear Day'
    id: reset_clear
    trigger:
      - platform: numeric_state
        entity_id: sensor.clear_day
        below: 1
    action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.clear_day
