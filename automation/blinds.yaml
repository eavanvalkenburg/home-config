  
  - alias: 'Blind close at sunset'
    id: blind_sunset
    trigger:
      - platform: sun
        event: sunset
      - platform: state
        entity_id: input_boolean.people_awake
        to: 'off'
    action:
        - service: cover.close_cover
          data:
            entity_id: cover.blind

  - alias: 'Blind open people awake'
    id: blind_people_awake
    trigger:
      - platform: time
        at: '10:00:00'
      - platform: state
        entity_id: input_boolean.people_awake
        to: 'on'
    action:
        - service: cover.open_cover
          data:
            entity_id: cover.blind

  # - alias: 'Blind open at sunrise week'
  #   id: blind_sunrise_week
  #   trigger:
  #     - platform: time
  #       at: '08:00:00'
  #   condition: 
  #     - condition: time
  #       weekday:
  #         - mon
  #         - tue
  #         - wed
  #         - thu
  #         - fri
  #   action:
  #       - service: cover.open_cover
  #         data:
  #           entity_id: cover.blind

  # - alias: 'Blind open at sunrise weekend'
  #   id: blind_sunrise_weekend
  #   trigger:
  #     - platform: time
  #       at: '11:00:00'
  #   condition: 
  #     - condition: time
  #       weekday:
  #         - sat
  #         - sun
  #   action:
  #       - service: cover.open_cover
  #         data:
  #           entity_id: cover.blind

  - alias: 'Close the blind when its sunny'
    id: blind_sunny
    trigger:
      # - platform: time
      #   minutes: '/5'
      #   seconds: 00
      - platform: template
        value_template: '{{ states.sensor.new_blind_position.state | int != states.sensor.blind_position.state | int }}'
    condition: 
      condition: and
      conditions:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      - condition: time
        after: '11:00:00'
    action:
        - service: cover.set_cover_position
          data_template:
            entity_id: cover.blind
            position: '{{ states.sensor.new_blind_position.state | int }}'

  - alias: 'Set Clear Day'
    id: set_clear
    trigger:
      platform: state
      entity_id: sensor.weather_condition
      to: clear
    condition: 
      condition: state
      entity_id: sun.sun
      state: above_horizon
    action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.clear_day

  - alias: 'Reset Clear Day'
    id: reset_clear
    trigger:
      platform: sun
      event: sunrise
      offset: '-00:05:00'
    action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.clear_day
    - condition: state
      entity_id: sensor.weather_condition
      state: clear
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.clear_day

  - alias: 'People Awake'
    id: people_awake
    trigger:
      platform: state
      entity_id: binary_sensor.people_awake
      to: 'on'
    condition:
      condition: time
      after: '07:00:00'
    action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.people_awake

  - alias: 'People Asleep'
    id: people_asleep
    trigger:
      platform: state
      entity_id: binary_sensor.people_awake
      to: 'off'
    condition:
      condition: time
      after: '22:00:00'
    action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.people_awake
