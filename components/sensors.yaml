  - platform: buienradar
    name: Weather
    monitored_conditions:
      - stationname
      - condition
      - conditiondetailed
      - symbol
      - humidity
      - temperature
      - windforce
      - winddirection
      - precipitation

  - platform: bunq
    api_key: !secret bunq_api_key

  - platform: systemmonitor
    resources:
      - type: last_boot
      - type: memory_use_percent
      - type: disk_use_percent
        arg: /

  - platform: uptime
    unit_of_measurement: minutes

  - platform: cpuspeed

  - platform: speedtest
    monitored_conditions:
      - ping
      - download
      - upload

  - platform: dnsip

  - platform: sonarr
    api_key: !secret sonarr_api_key
    monitored_conditions:
      - series
      - upcoming
      - wanted
      - queue
      - commands 
      - diskspace
    days: 2
    include_paths:
      - /content
    unit: TB
    
  - platform: postnl
    username: !secret postnl_un
    password: !secret postnl_pw

  - platform: ups
    username: !secret ups_username
    password: !secret ups_password

  - platform: hue
    ip_address: !secret hue_ip
    token: !secret hue_key

  - platform: alpha_vantage
    api_key: !secret alpha_vantage_key
    symbols:
    - symbol: MSFT
      name: Microsoft

  - platform: command_line
    name: "PyPi HASS Version"
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"

  - platform: version

  - platform: statistics
    name: Bathroom Humidity Stats
    entity_id: sensor.bathroom_relative_humidity
    max_age:
      minutes: 45

  - platform: history_stats
    name: People in Kitchen Ratio
    entity_id: sensor.kitchen_motion_sensor
    state: 'on'
    type: ratio
    end: '{{ now() }}'
    duration: 
      minutes: 10

  - platform: history_stats
    name: Clear day
    entity_id: sensor.weather_condition
    state: 'clear'
    type: count
    end: '{{ now() }}'
    duration: 
      minutes: 60

  - platform: statistics
    name: People In Kitchen
    entity_id: sensor.people_in_kitchen_ratio
    max_age:
      minutes: 120

  - platform: template
    sensors:
      plex_playing_movies:
        entity_id:
          - media_player.plex_plex_sn16y90mhqpsit50ds4iuvc3
        value_template: >- 
          {{ is_state_attr('media_player.plex_plex_sn16y90mhqpsit50ds4iuvc3', 'media_library_name', 'Movies' ) }}
      plex_playing_series:
        entity_id:
          - media_player.plex_plex_sn16y90mhqpsit50ds4iuvc3
        value_template: >- 
          {{ is_state_attr('media_player.plex_plex_sn16y90mhqpsit50ds4iuvc3', 'media_library_name', 'Series' ) }}
      blind_position:
        entity_id:
          - cover.blind
        friendly_name: 'Blind Position'
        value_template: "{{ states.cover.blind.attributes.current_position | int}}"
        unit_of_measurement: "%"
        icon_template: mdi:blinds
      new_blind_position:
        entity_id:
          - sun.sun
          - sensor.weather_temperature
          - sensor.temperature
          - input_boolean.clear_day
        value_template: >-
            {%- set elevation = states.sun.sun.attributes.elevation | float -%}
            {%- set azimuth = states.sun.sun.attributes.azimuth | float -%}
            {%- set temp_out = states.sensor.weather_temperature.state | float -%}
            {%- set temp_in = states.sensor.temperature.state | float -%}
            {%- set clear = is_state('input_boolean.clear_day', 'on') -%}
            {%- set add = (temp_in - 22, 1) | max -%}
            {%- set sun_pos = azimuth > 225 and azimuth < 286 -%}
            {%- set sun_ele = elevation > 1.4 -%}
            {%- set factor = (temp_out - 19, 1) | max -%}
            {%- set temp = temp_in >= 22 and temp_out >= 19 -%}
            {%- set tv_on = not(is_state('media_player.tv', 'off')) -%}
            {%- if sun_pos and sun_ele and (temp or tv_on) and clear -%}
            {{ ([[ elevation - (add*factor) | round | int, 100] |min, 0] |max) | int }}
            {%- else -%}
            {{ 100 }}
            {%- endif -%}
        unit_of_measurement: "%"
        icon_template: mdi:blinds
      total_packages:
        friendly_name: Total packages
        unit_of_measurement: 'packages'
        value_template: "{{ states('sensor.postnl')|int + states('sensor.ups')|int }}"
      hassuptime:
          friendly_name: "HASS Uptime"
          value_template: >-
            {% set uptime = states.sensor.uptime.state | round %}
            {% set minutes = (uptime % 60) | int %}
            {% set hours = ((uptime / 60) % 24) | int %}
            {% set days = (uptime / 1440) | int %}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
              {{ ', ' }}
            {%- endif -%}
            {{ '%02d' % hours }}:{{ '%02d' % minutes }} hrs
      temperature:
        entity_id:
        - sensor.hue_sml_001788010202dab402
        friendly_name: 'Kitchen Temperature'
        value_template: '{{(states.sensor.hue_sml_001788010202dab402.attributes.temperature)  | round(1)}}'
        unit_of_measurement: °C
      kitchen_light_level:
        entity_id:
        - sensor.hue_sml_001788010202dab402
        friendly_name: 'Kitchen Light level'
        value_template: '{{ states.sensor.hue_sml_001788010202dab402.attributes.lx | round(1)}}'
        unit_of_measurement: lux
      resume_music:
        friendly_name: Resume the music when the TV turns off
        value_template: "{{ is_state('input_boolean.resume_music', 'on') }}"
        icon_template: >-
          {% if is_state('input_boolean.resume_music', 'on') %}
            mdi:music-note
          {% else %}
            mdi:music-note-off
          {% endif %}
      sun_elevation:
        value_template: '{{ states.sun.sun.attributes.elevation | float }}'
        unit_of_measurement: 'º'
      sun_azimuth:
        value_template: '{{ states.sun.sun.attributes.azimuth | float }}'
        unit_of_measurement: 'º'
      microsoft_stock:
        entity_id:
          - sensor.microsoft
          - input_number.microsoft_stock
        friendly_name: Microsoft Stock value
        value_template: "{{ (states('sensor.microsoft') | float) * (states('input_number.microsoft_stock') | float) | round }}"
        unit_of_measurement: USD
        icon_template: mdi:microsoft
      bunq_total:
        entity_id:
          - sensor.bunq_boodschappen
          - sensor.bunq_default
          - sensor.bunq_evi_van_lanschot
          - sensor.bunq_uit_eten
          - sensor.bunq_we
        friendly_name: Bunq Total
        value_template: '{{ 
          states("sensor.bunq_boodschappen")|float + 
          states("sensor.bunq_default")|float + 
          states("sensor.bunq_evi_van_lanschot")|float +
          states("sensor.bunq_uit_eten")|float +
          states("sensor.bunq_we")|float
          }}'
        unit_of_measurement: EUR
        icon_template: mdi:currency-eur
