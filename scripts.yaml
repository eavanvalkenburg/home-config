  sonos_volume:
    sequence:
      # This is written using the Script Syntax
      - service: media_player.volume_set
        data:  
          entity_id: "media_player.living_room" 
        data_template:
          volume_level: >-
            {% set vol = ([states.media_player.bedroom.attributes.volume_level, states.media_player.bathroom.attributes.volume_level] | min | string) %}
            {{ vol }}
  say:
    alias: Sonos TTS
    sequence:
      - service: media_player.sonos_snapshot
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
      - service: tts.google_say
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"
          message: "{{ what }}"
      - delay:
          seconds: 1
      - delay: >-
          {% set duration = states.media_player[where].attributes.media_duration %}
          {% if duration > 0 %}
            {% set duration = duration - 1 %}
          {% endif %}
          {% set seconds = duration % 60 %}
          {% set minutes = (duration / 60)|int % 60 %}
          {% set hours = (duration / 3600)|int %}
          {{ [hours, minutes, seconds]|join(':') }}
      - service: media_player.sonos_restore
        data_template:
          entity_id: "{{ 'media_player.' ~ where }}"